#include<iostream>
using namespace std;
class Node
{   public:
    int data;
    Node* next;

    
    Node(int data)
    {
        this->data=data;
        next=NULL;
    }
    
 };

class queuez
{
    Node* head;
    int size;
    Node* tail;
    public:
    
    queuez()
    {
        head=NULL;
        tail=NULL;
        size=0;
    }
    int getsize()
    {
        return size;
    }
    
    bool isempty()
    {
        if(head==NULL)
        {
            return true;
        }
        else{
            return false;
        }
    }
    void enqueue(int element)
    {
        Node* newnode=new Node(element);
        if(head==NULL)
        {
            head=newnode;
            tail=newnode;
            size++;
        }
     else
     {
        tail->next=newnode;
        tail=newnode;
        size++;
     }
        
    }
    int front()
    {
        return head->data;
    }
        
    int dequeue()
    {
         if(isempty())
         {
             return 0;
         }
        int ans=head->data;
        Node* a=head;
        head=head->next;
        delete(a);
        size--;
        return ans;
    }
    
};
    
int main()
{
    queuez q;
    q.enqueue(19);
    q.enqueue(20);
    q.enqueue(21);
   cout<< q.getsize()<<endl;
    cout<<q.dequeue()<<endl;
    cout<<q.getsize()<<endl;
        
}
